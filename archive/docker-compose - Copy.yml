
networks:
    n8n-network:
        driver: bridge


services:
    postgres:
        image: postgres:14
        restart: unless-stopped
        env_file: .env
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes: [C:/Users/Jnebr/n8n_postgres:/var/lib/postgresql/data]
        networks: [n8n-network]
        healthcheck:  # Add health check
            test: [CMD-SHELL, pg_isready -U n8n -d n8n]
            interval: 5s
            timeout: 5s
            retries: 5
        
        
    n8n:
        image: n8nio/n8n:latest
        restart: unless-stopped
        ports: [5678:5678]
        env_file: .env
        environment:
            - DB_TYPE=${DB_TYPE}
            - DB_POSTGRESDB_HOST=${DB_POSTGRESDB_HOST}
            - DB_POSTGRESDB_PORT=${DB_POSTGRESDB_PORT}
            - DB_POSTGRESDB_DATABASE=${DB_POSTGRESDB_DATABASE}
            - DB_POSTGRESDB_USER=${DB_POSTGRESDB_USER}
            - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD}
            - N8N_RUNNERS_ENABLED=true
            - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE}
            - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
            - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
            - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
            - WEBHOOK_URL=${WEBHOOK_URL}
            - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=${N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS}
        volumes: [C:/Users/Jnebr/n8n_data:/home/node/.n8n]
        depends_on:
            postgres:
                condition: service_healthy  # Wait for PostgreSQL to be ready
        networks:
            - n8n-network

                # added healthcheck  
        healthcheck:
            test:
                - CMD
                - wget
                - -qO-
                - --user
                - ${N8N_BASIC_AUTH_USER}
                - --password
                - ${N8N_BASIC_AUTH_PASSWORD}
                - http://n8n:5678/rest/health  # Use service name + internal API endpoint
            interval: 30s
            timeout: 10s
            start_period: 20s  # Wait 20s before first check
            retries: 3
            
    cloudflared:
        restart: unless-stopped
        image: cloudflare/cloudflared:latest
        command: tunnel --config /etc/.cloudflared/config.yml run 10451b71-bfe3-4176-a5f7-27c8b5e5b61b
        volumes: [C:/Users/Jnebr/.cloudflared:/etc/.cloudflared]
        networks: [n8n-network]
        depends_on: [n8n]
        healthcheck:
            test:
              - CMD
              - cloudflared
              - tunnel
              - info
              - --id
              - 10451b71-bfe3-4176-a5f7-27c8b5e5b61b
            interval: 30s
            timeout: 10s
            retries: 3
