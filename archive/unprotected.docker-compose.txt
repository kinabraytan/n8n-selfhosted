
networks:
  n8n-network:
    driver: bridge

services:
  postgres:
    image: postgres:14
    restart: unless-stopped
    environment:
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: 1wFmS8mn!m$RWOm6tj
      POSTGRES_DB: n8n
    volumes:
      - C:/Users/Jnebr/n8n_postgres:/var/lib/postgresql/data
    networks:
      - n8n-network
    healthcheck: # Add health check
      test: ["CMD-SHELL", "pg_isready -U n8n -d n8n"]
      interval: 5s
      timeout: 5s
      retries: 5

  n8n:
    image: n8nio/n8n:latest
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres # Fixed hostname
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=1wFmS8mn!m$RWOm6tj
      - N8N_RUNNERS_ENABLED=true
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=1wFmS8mn!m$RWOm6tj
      - N8N_ENCRYPTION_KEY=a2760d9a2dd442aaad3ee69524dfd9f4
      - WEBHOOK_URL=https://n8n.virtualxperiencellc.com
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true # Fix permissions
    volumes:
      - C:/Users/Jnebr/n8n_data:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy # Wait for PostgreSQL to be ready
    networks:
      - n8n-network
  cloudflared:
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    command: tunnel --config /etc/.cloudflared/config.yml run
    volumes:
      - C:/Users/Jnebr/.cloudflared:/etc/.cloudflared
    networks:
      - n8n-network
    depends_on:
      - n8n